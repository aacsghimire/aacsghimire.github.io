[{"content":"Default username: John Default Password: TwoCows2 NIKTO `Web Vulneribility Scanner` nikto -h target ip* i.e nikto -host url Findings Outdated Applications - Google common exploits for given Version Apache mod_ssl openssl mod_ssl vulnerable to a remote buffer overflow Little bit of Directory Busting DIRBUSTER Directory Busting / Finding Folders ALternatives: gobuster, dirb, ferox boster dirbuster\u0026amp; insert target url on Target URL section Check \u0026lsquo;Go Faster\u0026rsquo; Check List based brute force Click browse, navigate to /usr/share/wordlists/dirbuster/ Select a list File extension: php,txt,zip choose the extension you want to look for Note: more extension more time START Tip: Dir Scan takes a while. It is always a good idea to start the scan as soon as possible so we can do other task while the scan is running in Background.\nBURPSUITE Security Testing Web Applications start Burpsuite\nSetup your browser for burpsuite from here\nNext, Use Burp default\nStart Burp\nChoose Proxy from Top Menu\nClick on Intercept is off to tun it on and Open Browser Open target url on the browser\non the text area right click \u0026gt; send to repeater\ngo to New option repeater on top menu\ntry changing command and send\nThis can modify website Screenshot or save result for info Disclosure\nGo to Target \u0026gt; Sitemap \u0026gt; Response\nScreenshot for Info Disclosure\nTurn Intercept Off Dirbuster (again) Results are back Lets check folders Usage seems interesting Lets check files in browser At the bottom there is Webalizer 2.01 Lets note that Note: Check through files and sources for possible Passwords and Leaks METASPLOIT Exploitation Framework msfconsole msf6 \u0026gt; search smb You will see many results, lets find SMB version there\u0026rsquo;s a path auxiliary/scanner/smb/smb_version (Long way to do it) use auxiliary/scanner/smb/smb_version info We found RHOSTS so far, which stands for Remote Hosts set RHOSTS _Target IP_ run We found Samba 2.2.1a SMB Client Connect to file share smbclient -L \\\\\\\\target ip\\\\ -L lists the files use the slashes() Just Press Enter without Password NOTE: Question: My enum4linux and/or smbclient are not working. I am receiving \u0026#34;Protocol negotiation failed: NT_STATUS_IO_TIMEOUT\u0026#34;. How do I resolve? Resolution: On Kali, edit /etc/samba/smb.conf Add the following under global: client min protocol = CORE client max protocol = SMB3 Here we find IPC and $admin , $admin is useful to us lets try it Let\u0026rsquo;s try again smbclient \\\\\\\\target ip\\\\ADMIN$ Wrong Password smbclient -L \\\\\\\\target ip\\\\IPC$ We are inside SMB ls : To list files ACCESS DENIED SSH Remote Login From our nmap scan we have OpenSSH version 2.9p2\nssh target_ip\nTheir offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1 ssh target_ip -oKexAlgorithms=+diffie-hellman-group1-sha1\nIt is going to ask for Cypher If you get Their offer: ssh-rsa,ssh-dss\nNavigate to ~/.ssh/config add HOST targetip HostKeyAlgorithms +ssh-dss Now it asks for cypher\nssh target_ip -oKexAlgorithms=+diffie-hellman-group1-sha1 -c aes128-cbc\nIts asks for confirmation Type: yes\nIt prompts for password\nLets exit\nWe are not going to exploit Now. ","permalink":"https://notes.ashishghimire.com/posts/kioptrixwalkthrough2/","summary":"Default username: John Default Password: TwoCows2 NIKTO `Web Vulneribility Scanner` nikto -h target ip* i.e nikto -host url Findings Outdated Applications - Google common exploits for given Version Apache mod_ssl openssl mod_ssl vulnerable to a remote buffer overflow Little bit of Directory Busting DIRBUSTER Directory Busting / Finding Folders ALternatives: gobuster, dirb, ferox boster dirbuster\u0026amp; insert target url on Target URL section Check \u0026lsquo;Go Faster\u0026rsquo; Check List based brute force Click browse, navigate to /usr/share/wordlists/dirbuster/ Select a list File extension: php,txt,zip choose the extension you want to look for Note: more extension more time START Tip: Dir Scan takes a while.","title":"Vulnhub Kioptrix Walkthrough Part 2"},{"content":"Default username: John Default Password: TwoCows2 Tips: Save your all Scans in text/image for future use\nLets find our IP Start Virtual Machine ping 8.8.8.8 in your main OS terminal, this will give us ip of our target machine Now go to your main machine Kali run sudo arp-scan -l This will give us IP address - Mac Address and Vendor We are looking for our matching IP. or Azureware/VMware\nOptional\nNow go to terminal - sudo netdiscover -r your IP/subnet mask - sudo netdiscover -r 192.168.0.0/24 This did not work in my case\nLook for OPEN PORTS nmap sudo nmap -sS 192.168.0.26 -sS stands for stealth mode For Full scan with nmap: Gives extensive information sudo nmap -T4 -p- -A ip_of_target\nNote: Here -T4 is for speed, -p- all Ports and -A for all info, OS, Fingerprinting, applications and their version of applications, etc. NMAP Common Nmap commands and Uses Host Discovery As long as there is nmap . . . ip it is going to discover hosts attribute order does not matter start with nmap or sudo nmap and end with ip To scan only UDP nmap -sU -T4 192.168.0.26 Note: removing -A makes it faster because it only scan few Info Here we found:\nTarget IP, Mac Address OPEN TCP Ports OS, application uses, and Versions Some more useful info. ","permalink":"https://notes.ashishghimire.com/posts/kioptrixwalkthrough1/","summary":"Default username: John Default Password: TwoCows2 Tips: Save your all Scans in text/image for future use\nLets find our IP Start Virtual Machine ping 8.8.8.8 in your main OS terminal, this will give us ip of our target machine Now go to your main machine Kali run sudo arp-scan -l This will give us IP address - Mac Address and Vendor We are looking for our matching IP. or Azureware/VMware","title":"Vulnhub Kioptrix Walkthrough Part 1"},{"content":"So our Journey of Hack starts here. We are going to install VMware to run our Vulnerable Machine Kioptrix.\nDownload VMware or Virtual Box Download Kioptrix a ready made Vulnerable Machine provided by TCM-SEC from Vulnhub Now Import downloaded VM Image on your virtual engine. - Open - Default Username: john - Default password: TwoCows2 ","permalink":"https://notes.ashishghimire.com/posts/installingkioptrix/","summary":"So our Journey of Hack starts here. We are going to install VMware to run our Vulnerable Machine Kioptrix.\nDownload VMware or Virtual Box Download Kioptrix a ready made Vulnerable Machine provided by TCM-SEC from Vulnhub Now Import downloaded VM Image on your virtual engine. - Open - Default Username: john - Default password: TwoCows2 ","title":"Installing VMware and Vulnhub Kioptrix"},{"content":"OSINT Open Source Intelligence Email OSINT Email Discovery hunter.io phonebook.cz voilanorbert.com Clearbit - Chromium Plugin tools.verifyemailaddress.io (Verify Email Address) Use Forgot Password to tie email accounts.\nIn this way a recovery email can be tied to another email address.\nPassword OSINT Credentials Stuffing Automate Prevoiusly found username \u0026amp; Passwords Dehashed Hunting Breached Credentials with DeHashed Find Subdomains *.domain.com Sublist3r python3 sublist3r.py -d domain.com Owasp Tomnomnom Build and Frameworks Know how website is built builtwith.com wappalyzer (Firefox Plugin) Traffic Interception Web Proxy Burpsuite Setup --- - Change DNS Proxy to manual - ip: 127.0.0.1 Port: 8080 - visit: https://burp - Download Certificate - Go To Firefox Privacy \u0026amp; Security - view certs - upload and select both - check boxes and OK. Installed - Turn on Intercept - Check Website from Browser - Turn off intercept - Check Through Data ","permalink":"https://notes.ashishghimire.com/posts/reconaissancepart2/","summary":"OSINT Open Source Intelligence Email OSINT Email Discovery hunter.io phonebook.cz voilanorbert.com Clearbit - Chromium Plugin tools.verifyemailaddress.io (Verify Email Address) Use Forgot Password to tie email accounts.\nIn this way a recovery email can be tied to another email address.\nPassword OSINT Credentials Stuffing Automate Prevoiusly found username \u0026amp; Passwords Dehashed Hunting Breached Credentials with DeHashed Find Subdomains *.domain.com Sublist3r python3 sublist3r.py -d domain.com Owasp Tomnomnom Build and Frameworks Know how website is built builtwith.","title":"Reconnaissance Part 2"},{"content":"Passive Reconnaissance Physical Location Satellite Images Drone Recon Building Layouts, etc. Social Job Information Employees Name, Job, Title, Manager Name Picture Badge Picture Desk Photos Computer Photos Web/Host Target Validation Whois nslookup dnsrecon Finding Subdomains Google Fu dig nmap sublist3r bluto crt.sh Fingerprinting Finding what is used on the app. nmap wappalyzer WhatWeb BuiltWith Wetcat Data Breaches haveibeenpwned Breach-Parse weleakinfo ","permalink":"https://notes.ashishghimire.com/posts/reconnaissancepart1/","summary":"Passive Reconnaissance Physical Location Satellite Images Drone Recon Building Layouts, etc. Social Job Information Employees Name, Job, Title, Manager Name Picture Badge Picture Desk Photos Computer Photos Web/Host Target Validation Whois nslookup dnsrecon Finding Subdomains Google Fu dig nmap sublist3r bluto crt.sh Fingerprinting Finding what is used on the app. nmap wappalyzer WhatWeb BuiltWith Wetcat Data Breaches haveibeenpwned Breach-Parse weleakinfo ","title":"Reconnaissance Part 1"},{"content":"Reconissance Info Gathering. Active\nScanning and Enumeration Using Different Tools Finding Open Ports and Vulneribilities Passive\nGoogle Search Social Media Scan Facebook Twitter Linkedin, etc. Scanning \u0026amp; Enumeration Scanning Through PC Nmap Nessus Nikto, etc.7 Gaining Access Exploitation Maintaining Access Also Scanning And Enumeration Covering Tracks Deleting Logs and Cleaning Up The Method is also called 5 Stages of Ethical Hacking.\n","permalink":"https://notes.ashishghimire.com/posts/day1-hacking-methodology/","summary":"Reconissance Info Gathering. Active\nScanning and Enumeration Using Different Tools Finding Open Ports and Vulneribilities Passive\nGoogle Search Social Media Scan Facebook Twitter Linkedin, etc. Scanning \u0026amp; Enumeration Scanning Through PC Nmap Nessus Nikto, etc.7 Gaining Access Exploitation Maintaining Access Also Scanning And Enumeration Covering Tracks Deleting Logs and Cleaning Up The Method is also called 5 Stages of Ethical Hacking.","title":"The Ethical Hacker Methodology "},{"content":"The course that i am following is from TCM Academy\nHere is the course structure which you can also see in TCM-Sec Website The Cyber Mentor Youtube and also on before enrolling. I am going to skip to The Ethical Hacker Methodology.\nSpecial Thanks \u0026amp; Credits\nPNPT Certification Path Progression (2:32)\nIntroduction Course Introduction (7:24)\nCourse Discord (Important) (2:45)\nA Day in the Life of an Ethical Hacker (20:55)\nWhy You Shouldn\u0026rsquo;t Be An Ethical Hacker\nNotekeeping Effective Notekeeping (6:39)\nImportant Tools (5:20)\nNetworking Refresher Introduction (1:11)\nIP Addresses (13:06)\nMAC Addresses (3:13)\nTCP, UDP, and the Three-Way Handshake (5:12)\nCommon Ports and Protocols (6:09)\nThe OSI Model (5:30)\nSubnetting Part 1 (26:59)\nSubnetting Part 2 (4:13)\nSetting Up Our Lab Installing VMWare / VirtualBox (6:15)\nConfiguring VirtualBox (3:16)\nInstalling Kali Linux (5:32)\nIntroduction to Linux Exploring Kali Linux (3:28)\nSudo Overview (5:12)\nNavigating the File System (18:12)\nUsers and Privileges (16:54)\nCommon Network Commands (8:26)\nViewing, Creating, and Editing Files (6:21)\nStarting and Stopping Services (6:17)\nInstalling and Updating Tools (11:53)\nScripting with Bash (22:34)\nIntroduction to Python Introduction (2:19)\nStrings (7:24)\nMath (5:44)\nVariables and Methods (10:20)\nFunctions (8:58)\nBoolean Expressions and Relational Operators (8:33)\nConditional Statements (6:58)\nLists (12:12)\nTuples (2:11)\nLooping (4:29)\nAdvanced Strings (12:39)\nDictionaries (6:24)\nImporting Modules (5:58)\nSockets (7:39)\nBuilding a Port Scanner (18:33)\nUser Input (8:38)\nReading and Writing Files (9:56)\nClasses and Objects (7:51)\nBuilding a Shoe Budget Tool (14:19)\nThe Ethical Hacker Methodology The Five Stages of Ethical Hacking (5:16) Information Gathering (Reconnaissance) Passive Reconnaissance Overview (7:32)\nIdentifying Our Target (3:33)\nDiscovering Email Addresses (15:48)\nGathering Breached Credentials with Breach-Parse (7:17)\nHunting Breached Credentials with DeHashed (11:55)\nHunting Subdomains Part 1 (5:31)\nHunting Subdomains Part 2 (4:48)\nIdentifying Website Technologies (7:06)\nInformation Gathering with Burp Suite (8:48)\nGoogle Fu (5:31)\nUtilizing Social Media (5:37)\nAdditional Learning (OSINT Fundamentals) (0:48)\nScanning \u0026amp; Enumeration Installing Kioptrix (6:17)\nScanning with Nmap (19:46)\nEnumerating HTTP and HTTPS Part 1 (15:01)\nEnumerating HTTP and HTTPS Part 2 (15:08)\nEnumerating SMB (14:19)\nEnumerating SSH (4:09)\nResearching Potential Vulnerabilities (14:49)\nOur Notes So Far (3:06)\nVulnerability Scanning with Nessus Scanning with Nessus Part 1 (10:34)\nScanning with Nessus Part 2 (6:09)\nExploitation Basics Reverse Shells vs Bind Shells (7:00)\nStaged vs Non-Staged Payloads (3:21)\nGaining Root with Metasploit (7:40)\nManual Exploitation (12:40)\nBrute Force Attacks (7:49)\nCredential Stuffing and Password Spraying (14:02)\nOur Notes, Revisited (3:03)\nNew Capstone Introduction (5:42)\nSet Up - Blue (3:56)\nWalkthrough - Blue (17:00)\nSet Up - Academy (2:24)\nWalkthrough - Academy (44:19)\nWalkthrough - Dev (25:20)\nWalkthrough - Butler (36:18)\nWalkthrough - Blackpearl (23:30)\nIntroduction to Exploit Development (Buffer Overflows) Required Installations (6:16)\nBuffer Overflows Explained (4:08)\nSpiking (10:11)\nFuzzing (6:09)\nFinding the Offset (5:19)\nOverwriting the EIP (3:24)\nFinding Bad Characters (7:51)\nFinding the Right Module (8:26)\nGenerating Shellcode and Gaining Root (5:56)\nExploit Development Using Python3 and Mona (13:39)\nActive Directory Overview Active Directory Overview (5:13)\nPhysical Active Directory Components (5:45)\nLogical Active Directory Components (7:28)\nActive Directory Lab Build Lab Overview and Requirements (3:01)\nDownloading Necessary ISOs (2:47)\nSetting Up the Domain Controllers (13:39)\nSetting Up the User Machines (7:52)\nSetting Up Users, Groups, and Policies (15:46)\nJoining Our Machines to the Domain (8:48)\nLab Build - (Cloud Alternative) (2:04)\nAttacking Active Directory: Initial Attack Vectors Introduction (3:55)\nLLMNR Poisoning Overview (7:26)\nCapturing NTLMv2 Hashes with Responder (4:46)\nPassword Cracking with Hashcat (11:31)\nLLMNR Poisoning Defense (2:48)\nSMB Relay Attacks Overview (5:23)\nQuick Lab Update (0:58)\nDiscovering Hosts with SMB Signing Disabled (3:36)\nSMB Relay Attack Demonstration Part 1 (4:54)\nSMB Relay Attack Demonstration Part 2 (4:07)\nSMB Relay Attack Defenses (2:33)\nGaining Shell Access (7:46)\nIPv6 Attacks Overview (4:00)\nInstalling mitm6 (1:18)\nSetting Up LDAPS (2:24)\nIPv6 DNS Takeover via mitm6 (7:43)\nIPv6 Attack Defenses (3:00)\nPassback Attacks (5:16)\nOther Attack Vectors and Strategies (8:43)\nAttacking Active Directory: Post-Compromise Enumeration Introduction (2:01)\nPowerView Overview (2:13)\nDomain Enumeration with PowerView (15:17)\nBloodhound Overview and Setup (3:32)\nGrabbing Data with Invoke-Bloodhound (3:11)\nEnumerating Domain Data with Bloodhound (7:34)\nAttacking Active Directory: Post-Compromise Attacks Introduction (1:03)\nPass the Hash / Password Overview (3:04)\nInstalling crackmapexec (0:38)\nPass the Password Attacks (7:07)\nDumping Hashes with secretsdump.py (3:11)\nCracking NTLM Hashes with Hashcat (3:06)\nPass the Hash Attacks (6:25)\nPass Attack Mitigations (2:42)\nToken Impersonation Overview (3:48)\nToken Impersonation with Incognito (7:03)\nToken Impersonation Mitigation (2:43)\nKerberoasting Overview (5:11)\nKerberoasting Walkthrough (3:51)\nKerberoasting Mitigation (1:09)\nGPP / cPassword Attacks Overview (3:22)\nAbusing GPP: Part 1 (8:46)\nAbusing GPP: Part 2 (4:12)\nURL File Attacks (5:35)\nPrintNightmare (CVE-2021-1675) Walkthrough (12:05)\nMimikatz Overview (5:36)\nCredential Dumping with Mimikatz (9:20)\nGolden Ticket Attacks (7:18)\nConclusion and Additional Resources (6:24)\nAdditional Active Directory Attacks Abusing ZeroLogon (9:02) Post Exploitation Introduction (1:49)\nFile Transfers Review (2:32)\nMaintaining Access Overview (3:32)\nPivoting Lab Setup (6:30)\nPivoting Walkthrough (6:07)\nCleaning Up (2:48)\nWeb Application Enumeration, Revisited Introduction (1:49)\nInstalling Go (1:19)\nFinding Subdomains with Assetfinder (7:43)\nFinding Subdomains with Amass (5:27)\nFinding Alive Domains with Httprobe (7:14)\nScreenshotting Websites with GoWitness (4:10)\nAutomating the Enumeration Process (5:46)\nAdditional Resources (2:18)\nTesting the Top 10 Web Application Vulnerabilities Introduction (1:36)\nThe OWASP Top 10 and OWASP Testing Checklist (10:26)\nInstalling OWASP Juice Shop (6:48)\nInstalling Foxy Proxy (2:13)\nExploring Burp Suite (11:28)\nIntroducing the Score Board (2:50)\nSQL Injection Attacks Overview (5:12)\nSQL Injection Walkthrough (10:06)\nSQL Injection Defenses (2:49)\nBroken Authentication Overview and Defenses (5:43)\nTesting for Broken Authentication (7:39)\nSensitive Data Exposure Overview and Defenses (4:53)\nTesting for Sensitive Data Exposure (8:01)\nXML External Entities (XXE) Overview (9:54)\nXXE Attack and Defense (8:03)\nBroken Access Control Overview (3:29)\nBroken Access Control Walkthrough (4:28)\nSecurity Misconfiguration Attacks and Defenses (4:58)\nCross-Site Scripting (XSS) Overview (10:33)\nReflected XSS Walkthrough (6:22)\nStored XSS Walkthrough (6:16)\nPreventing XSS (3:48)\nInsecure Deserialization (4:33)\nUsing Components with Known Vulnerabilities (4:38)\nInsufficient Logging and Monitoring (3:12)\nWireless Penetration Testing 001_Wireless_Penetration_Testing_Overview (10:26)\n002_WPA_PS2_Exploit_Walkthrough (13:12)\nLegal Documents and Report Writing 001_Common_Legal_Documents (7:17) 002_Pentest_Report_Writing (11:16) 003_Reviewing_a_Real_Pentest_Report (19:34) Career Advice 001_Career_Advice (11:10) ","permalink":"https://notes.ashishghimire.com/posts/coursestructure/","summary":"The course that i am following is from TCM Academy\nHere is the course structure which you can also see in TCM-Sec Website The Cyber Mentor Youtube and also on before enrolling. I am going to skip to The Ethical Hacker Methodology.\nSpecial Thanks \u0026amp; Credits\nPNPT Certification Path Progression (2:32)\nIntroduction Course Introduction (7:24)\nCourse Discord (Important) (2:45)\nA Day in the Life of an Ethical Hacker (20:55)\nWhy You Shouldn\u0026rsquo;t Be An Ethical Hacker","title":"Course Structure for Ethical Hacking"},{"content":" Windows Install simply download Git EXE file from Git for Windows Run it and Install Check version from command prompt with git version Linux - Debian/Ubuntu/Kali Usually it comes pre installed. If its not in your system open Terminal and use the code:\nUpdate your repository with sudo apt-get update Install sudo apt-get install git-all After install check version git version Mac Go to macOS Git Installer After installation open terminal and use code to check installation git version For more info on installation visit this Github Link\n","permalink":"https://notes.ashishghimire.com/posts/githubinstall/","summary":"Windows Install simply download Git EXE file from Git for Windows Run it and Install Check version from command prompt with git version Linux - Debian/Ubuntu/Kali Usually it comes pre installed. If its not in your system open Terminal and use the code:\nUpdate your repository with sudo apt-get update Install sudo apt-get install git-all After install check version git version Mac Go to macOS Git Installer After installation open terminal and use code to check installation git version For more info on installation visit this Github Link","title":"Install Github"},{"content":"Yes there are too many codes to just deploy your post, now to tackle that hassle we will create a code to upload everything with just one line. In order to go thorough you need to configure your default credentials. Here is a Stack Overflow Link for time being, before i post. Steps:\nOutside your blog folder create an empty file. Rename it to deploy.sh Now we need to edit the code, you can copy the code below. Make sure you change the name of the directories. #!/bin/bash cd notes hugo git add . git commit -m \u0026#34;new post\u0026#34; git push origin main cd public git add . git commit -m \u0026#34;new post\u0026#34; git push origin main Now let\u0026rsquo;s make the file executable chmod u+x deploy.sh 5.Open the terminal and run ./deploy.sh If you have set global credentials your new post will be uploaded within 1-2 minutes. Enjoy!\nNote: Get full detail on Hugo To Github\n","permalink":"https://notes.ashishghimire.com/posts/github-shortcut/","summary":"Yes there are too many codes to just deploy your post, now to tackle that hassle we will create a code to upload everything with just one line. In order to go thorough you need to configure your default credentials. Here is a Stack Overflow Link for time being, before i post. Steps:\nOutside your blog folder create an empty file. Rename it to deploy.sh Now we need to edit the code, you can copy the code below.","title":"Quickly Deploy "},{"content":"Hugo is free, static, fast and minimal website creator. In this blog we are going to setup this current Hugo site (without modification) and deploy to Github Pages for free. I am also going to setup so new posts can be added and published on your website everytime.\nLogin Github\nInstall Hugo On System\nCreate Two Repos on Github\na. blog Houses our hugo code b. username.github.io For website generated pages\nGet Theme for Hugo (PaperMod)\nClone \u0026lsquo;blog \u0026rsquo; Repo in Desktop (notesite) git clone https://github.com/*/blog.git\nInside blog repo run Hugo\n/blog/ hugo new site notes /blog/ cd notes/theme /blog/notes/theme/ git clone https://github.com/adityatelange/hugo-PaperMod.git /blog/notes/theme/ cd ../ /notes/sudo nano config.toml - to use toml or change it to yaml. NOTE add theme: PaperMod and change baseUrl value Use any converter from Google and save it as config.yaml and delete toml file.\nTest Site in local server with /notes/ hugo server add a demo post with /notes/ hugo new posts/firstPost.md Edit Title, remove draft add contents below horizontal line. Submodule Go back to /notesite/ cd ../ /notesite/ git clone https://github.com/username/username.github.io /notesite/ cd username.github.io create and switch to main branch /username.github.io/ git checkout -b main have atleast one commit as readme /username.github.io/ touch readme.md /username.github.io/ git add . commit to main /username.github.io/ git commit -m \u0026quot;Adding Readme\u0026quot; push to main branch /username.github.io/ git push origin main Add Git Submodule References to the repository. /username.github.io/ cd ../ /notesite/ cd blog /blog/ cd notes Add static genereated files to /public/ folder: /notes/ git submodule add -b main https://github.com/username/username.github.io public Build site using /notes/ hugo -t PaperMod All static sites are generated in public Folder Upload to username.github.io Inside /public/ folder /public/ git add . /public/ git commit -m \u0026quot;First static upload\u0026quot; /public/ git push origin main DEPLOYED NOTE: Folder Structure /notesite/blog/notes/public /notesite/username.github.io/\nADDING NEW POST AND PUBLISHING Generate Note /notes/ hugo new posts/post.md /notes/ hugo -t PaperMod\nPush to Blog Repo /notes/ git add . /notes/ git commit -m \u0026quot;somemsg\u0026quot; /notes/ git push origin main Push to Github pages and Publish on Website /notes/ cd public /notes/public/ git add . /notes/public/ git commit -m \u0026quot;somemsg\u0026quot; /notes/public/ git push origin main NOTE: Folder Structure /notesite/blog/notes/public/ /notesite/username.github.io/ ","permalink":"https://notes.ashishghimire.com/posts/hugotogithub/","summary":"Hugo is free, static, fast and minimal website creator. In this blog we are going to setup this current Hugo site (without modification) and deploy to Github Pages for free. I am also going to setup so new posts can be added and published on your website everytime.\nLogin Github\nInstall Hugo On System\nCreate Two Repos on Github\na. blog Houses our hugo code b. username.github.io For website generated pages","title":"Host Hugo Sites On GITHUB"}]